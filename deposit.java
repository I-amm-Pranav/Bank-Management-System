try {
// TODO add your handling code here:
con.setAutoCommit(false);
String accno = txtacc.getText();
String cust_id = jLabel13.getText();
String firstname = jLabel14.getText();
String lastname = jLabel15.getText();
String date = jLabel16.getText();import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Deposit extends javax.swing.JFrame {

    private Connection con;
    private PreparedStatement insert, update;
    private ResultSet rs;

    public Deposit() {
        initComponents();
        date(); // Initialize date in the form
    }

    // Method to initialize components (auto-generated by NetBeans)
    private void initComponents() {
        // Initialization of swing components omitted for brevity
    }

    // Deposit handling code
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            con.setAutoCommit(false); // Disable auto-commit for transaction

            String accno = txtacc.getText();
            String cust_id = jLabel13.getText();
            String date = jLabel16.getText();
            String balance = jLabel6.getText();
            String amount = txtamount.getText();

            // Insert deposit into 'deposit' table
            insert = con.prepareStatement("insert into deposit(acc_id,cust_id,date,balance,deposit) values(?,?,?,?,?)");
            insert.setString(1, accno);
            insert.setString(2, cust_id);
            insert.setString(3, date);
            insert.setString(4, balance);
            insert.setString(5, amount);
            insert.executeUpdate();

            // Update account balance in 'Account' table
            update = con.prepareStatement("update Account set bal = bal + ? where account_no = ?");
            update.setString(1, amount);
            update.setString(2, accno);
            update.executeUpdate();

            JOptionPane.showMessageDialog(this, "Deposited Successfully");
            con.commit(); // Commit the transaction
        } catch (ClassNotFoundException | SQLException ex) {
            try {
                con.rollback(); // Rollback transaction in case of exception
            } catch (SQLException ex1) {
                Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex1);
            }
            Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Deposit failed: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Method to retrieve account information based on account number
    private void findAccount(String accno) {
        try {
            // Fetch customer and account details
            insert = con.prepareStatement("select c.cust_id, c.firstname, c.lastname, a.bal from customer c, account a where c.cust_id = a.customerid and a.account_no = ?");
            insert.setString(1, accno);
            rs = insert.executeQuery();

            if (rs.next()) {
                String id = rs.getString(1);
                String firstname = rs.getString(2);
                String lastname = rs.getString(3);
                String balance = rs.getString(4);

                jLabel13.setText(id.trim());
                jLabel14.setText(firstname.trim());
                jLabel15.setText(lastname.trim());
                jLabel6.setText(balance.trim());
            } else {
                JOptionPane.showMessageDialog(this, "Account not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error finding account: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Method to set current date in jLabel16
    public void date() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();
        String date = dtf.format(now);
        jLabel16.setText(date);
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
        dispose();
    }

    // Other event handling methods and variables declaration not shown for brevity
}

String balance = jLabel6.getText();
String amount = txtamount.getText();
Class.forName("com.mysql.jdbc.Driver");
con =
DriverManager.getConnection("jdbc:mysql://localhost:3306/hsbank","root","Surya@2004!");
insert = con.prepareStatement("insert into deposit(acc_id,cust_id,date,balance,deposit)values(?,?,?,?,?)");
insert.setString(1,accno); insert.setString(2,cust_id); insert.setString(3,date); insert.setString(4,balance);

insert.setString(5,amount); insert.executeUpdate();
update = con.prepareStatement( "update Account set bal = bal+ ? where account_no=?");
update.setString(1, amount); update.setString(2, accno);
update.executeUpdate();
JOptionPane.showMessageDialog(this,"Deposited Succesfully "); con.commit();
} catch (ClassNotFoundException ex) {
Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex); } catch (SQLException ex) {
try {
con.rollback();
} catch (SQLException ex1) {
Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex1);
}
Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex);
}
}
public void date()

{
DateTimeFormatter dtd = DateTimeFormatter.ofPattern("yyyy/MM/dd");
LocalDateTime now = LocalDateTime.now();
String date = dtd.format(now);
jLabel16.setText(date);
} try {
// TODO add your handling code here:
String accno = txtacc.getText();
Class.forName("com.mysql.jdbc.Driver");
con =
DriverManager.getConnection("jdbc:mysql://localhost:3306/hsbank","root","Surya@2004!"); insert = con.prepareStatement("select c.cust_id,c.firstname,c.lastname,a.bal from customer c, account a where c.cust_id = a.customerid and a.account_no = ?"); insert.setString(1, accno); rs = insert.executeQuery(); if(rs.next() == false)
{
JOptionPane.showMessageDialog(this,"Account not found");
} else
{
String id = rs.getString(1);
String firstname = rs.getString(2);
String lastname = rs.getString(3); String balance = rs.getString(4); jLabel13.setText(id.trim()); jLabel14.setText(firstname.trim()); jLabel15.setText(lastname.trim()); jLabel6.setText(balance.trim());

}
} catch (ClassNotFoundException ex) {
Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex);
} catch (SQLException ex) {
Logger.getLogger(Deposit.class.getName()).log(Level.SEVERE, null, ex);
}
}
private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
setVisible(false); dispose();
}
